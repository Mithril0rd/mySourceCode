#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std; 

const int MAX_N = 501;

int n, m;
int dp[MAX_N][MAX_N];
int a[MAX_N][MAX_N], b[MAX_N][MAX_N];
int sumA[MAX_N][MAX_N], sumB[MAX_N][MAX_N];

void solve() {
	 memset(dp, 0, sizeof dp); 
	 for (int i = 1; i <= n; ++i) {
	 	 for (int j = 1; j <= m; ++j) {
 	  	 	 dp[i][j] += max(dp[i][j - 1] + sumB[i][j], dp[i - 1][j] + sumA[i][j]);
	 	 }
	 }
  	 printf("%d\n", dp[n][m]);
}

int main() {
	while (2 == scanf("%d%d", &n, &m)) {
        if (n == 0 && m == 0) break;
	 	for (int i = 1; i <= n; ++i) {
			for (int j = 1; j <= m; ++j) {
		 		scanf("%d", &a[i][j]);
			  	sumA[i][j] = sumA[i][j - 1] + a[i][j];
			}
		}
		for (int i = 1; i <= n; ++i) {
			for (int j = 1; j <= m; ++j) {
		 		scanf("%d", &b[i][j]);
			  	sumB[i][j] = sumB[i - 1][j] + b[i][j];
			}
		}
	 	solve(); 
	}
	return 0;
} 